/*
  # Storage schema setup

  1. New Schema
    - Create storage schema if not exists
    - Create policies table for storage access control

  2. Tables
    - storage.policies
      - id (bigint, primary key)
      - name (text)
      - bucket_id (text)
      - definition (jsonb)

  3. Security
    - Grant necessary permissions to authenticated users
*/

-- Create storage schema
CREATE SCHEMA IF NOT EXISTS storage;

-- Create policies table
CREATE TABLE IF NOT EXISTS storage.policies (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name text NOT NULL,
  bucket_id text NOT NULL,
  definition jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now(),
  UNIQUE (name, bucket_id)
);

-- Create buckets table if not exists
CREATE TABLE IF NOT EXISTS storage.buckets (
  id text PRIMARY KEY,
  name text NOT NULL,
  public boolean DEFAULT false,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now()
);

-- Grant permissions
GRANT ALL ON SCHEMA storage TO authenticated;
GRANT ALL ON ALL TABLES IN SCHEMA storage TO authenticated;
GRANT ALL ON ALL SEQUENCES IN SCHEMA storage TO authenticated;